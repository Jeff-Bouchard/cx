package main
 
var maxn i32 = 10 // max cards
var maxl i32 = 50 // steps
  
func steps(n i32) (out i32) {
    var a [maxl][maxn+1]i32
	var b [maxl][maxn+1]i32
    var x [maxl]i32
	
    a[0][0] = 1
    var m i32
	var l i32 = 0
    for true = true {
continue:
        x[l]++
        k := x[l]
		
        if k >= n {
            if l <= 0 {
                out = m
				return
            }
			
            l--
            goto continue
        }
		
        if a[l][k] == 0 {
            if b[l][k+1] != 0 {
                goto continue
            }
        } else if a[l][k] != k+1 {
            goto continue
        }
		
        a[l+1] = a[l]
        for j := 1; j <= k; j++ {
            a[l+1][j] = a[l][k-j]
        }
		
        b[l+1] = b[l]
        a[l+1][0] = k + 1
        b[l+1][k+1] = 1
		
        if l > m-1 {
            m = l + 1
        }
		
        l++
        x[l] = 0
    }
    out = m
}


func main() {
	for i := 1; i <= maxn; i++ {
        printf("%d: %d\n", i, steps(i))
    }
}

